package main

/*

二进制手表顶部有 4 个 LED 代表 小时（0-11），底部的 6 个 LED 代表 分钟（0-59）。每个 LED 代表一个 0 或 1，最低位在右侧。

例如，下面的二进制手表读取 "4:51" 。


给你一个整数 turnedOn ，表示当前亮着的 LED 的数量，返回二进制手表可以表示的所有可能时间。你可以 按任意顺序 返回答案。

小时不会以零开头：

例如，"01:00" 是无效的时间，正确的写法应该是 "1:00" 。
分钟必须由两位数组成，可能会以零开头：

例如，"10:2" 是无效的时间，正确的写法应该是 "10:02" 。
*/

var hourTbl = [][]string{
	{"0"},
	{"1", "2", "4", "8"},
	{"3", "5", "6", "9", "10"},
	{"7", "11"},
}

var minuteTbl = [][]string{
	{"00"},
	{"01", "02", "04", "08", "16", "32"},
	{"03", "05", "06", "09", "10", "12", "17", "18", "20", "24", "33", "34", "36", "40", "48"},
	{"07", "11", "13", "14", "19", "21", "22", "25", "26", "28", "35", "37", "38", "41", "42", "44", "49", "50", "52", "56"},
	{"15", "23", "27", "29", "30", "39", "43", "45", "46", "51", "53", "54", "57", "58"},
	{"31", "47", "55", "59"},
}

func readBinaryWatch(turnedOn int) []string {
	var res []string
	for i := 0; i <= turnedOn && i < len(hourTbl); i++ {
		if turnedOn-i < len(minuteTbl) {
			for _, h := range hourTbl[i] {
				for _, m := range minuteTbl[turnedOn-i] {
					res = append(res, h+":"+m)
				}
			}
		}
	}
	return res
}
